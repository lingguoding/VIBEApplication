apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.vibe.app"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64', 'armeabi-v7a', 'armeabi-v8a'
        }

        manifestPlaceholders = [
                JPUSH_PKGNAME: applicationId,
                JPUSH_APPKEY : "4639890436d48043dd061685", //JPush上注册的包名对应的appkey.
                JPUSH_CHANNEL: "developer-default", //暂时填写默认值即可.
        ]

    }
    /*配置签名*/
    signingConfigs {
        release {
            storeFile file(KEY)
            storePassword KEY_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEYPASSWORD
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            /*去除无用的resource文件*/
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    def outputFile = output.outputFile
                    if (outputFile != null && outputFile.name.endsWith('.apk')) {
                        def fileName = "${project.name}_v${defaultConfig.versionName}_${releaseTime()}_${variant.productFlavors[0].name}.apk"
                        output.outputFile = new File(outputFile.parent, fileName)
                    }
                }
            }
        }
        debug {
            signingConfig signingConfigs.release
        }
    }

    productFlavors {
        fir {}

    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }


    sourceSets {
        main {
            //把java-gen文件夹下的java文件也归入srcDir中
            java.srcDirs = ['src/main/java', 'src/main/java-gen']
        }
    }


    lintOptions {
        abortOnError false
        disable 'MissingTranslation'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    //开启DataBinding
    dataBinding {
        enabled true
    }

    allprojects {
        repositories {
            maven { url "https://jitpack.io" }
        }
    }

    configurations.all {
        resolutionStrategy.force 'com.google.code.findbugs:jsr305:1.3.9'
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots'
    }
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile project(':framework')
    compile 'cn.bingoogolapple:bga-badgeview:1.1.3@aar'
    compile 'com.android.support:design:25.3.1'
    compile 'com.android.support:appcompat-v7:25.3.1'
    testCompile 'junit:junit:4.12'

    compile 'com.contrarywind:Android-PickerView:3.2.6'
    compile("com.polidea.rxandroidble:rxandroidble:1.4.3") {
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'io.reactivex', module: 'rxandroid'
        exclude group: 'io.reactivex', module: 'rxjava'
        exclude group: 'me.tatarka', module: 'gradle-retrolambda'
        exclude group: 'junit', module: 'junit'
    }

}

